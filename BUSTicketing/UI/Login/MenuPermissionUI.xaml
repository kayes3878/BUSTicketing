<Window x:Class="BUSTicketing.UI.Login.MenuPermissionUI"
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Menu Permission" Height="503" Width="607"  ShowInTaskbar="False" ResizeMode="CanMinimize" WindowStartupLocation="CenterScreen" Background="{StaticResource GrayWhite}">
    <Window.Resources>
        <Style TargetType="{x:Type TreeView}">
            <Setter Property="Background" Value="#3f000000"/>
            <Setter Property="BorderBrush" Value="#1ef009"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeView}">
                        <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer Focusable="false" Background="Transparent" Padding="{TemplateBinding Padding}" CanContentScroll="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="19"/>
            <Setter Property="Height" Value="13"/>
            <Setter Property="Foreground" Value="#000000"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Storyboard1" RepeatBehavior="Forever">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3" Value="6"/>
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.5" Value="2"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Storyboard2">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="6"/>
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border Width="19" Height="13" Background="Transparent">
                            <Border SnapsToDevicePixels="true" Width="9" Height="9" Background="{TemplateBinding Background}" x:Name="border">
                                <Border.BitmapEffect>
                                    <OuterGlowBitmapEffect GlowColor="#FFFFFF" GlowSize="1"/>
                                </Border.BitmapEffect>
                                <Path VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1,1,1,1" x:Name="ExpandPath" Fill="{TemplateBinding Foreground}" Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="ExpandPath" Value="M 0 2 L 0 3 L 5 3 L 5 2 Z"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource Storyboard2}" x:Name="Storyboard2_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontFamily" Value="Tahoma"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Storyboard1">
                                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                    <SplineColorKeyFrame KeyTime="00:00:00" Value="#00000000"/>
                                    <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#4C000000"/>
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="whiteRect" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="4"/>
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="6"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="whiteRect" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.75"/>
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Storyboard2">
                                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                    <SplineColorKeyFrame KeyTime="00:00:00" Value="#4C000000"/>
                                    <SplineColorKeyFrame KeyTime="00:00:00.3" Value="#00000000"/>
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="whiteRect" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="6"/>
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="4"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="whiteRect" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.75"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Border x:Name="Bd" Grid.ColumnSpan="3" Background="#00000000"/>

                            <ToggleButton x:Name="Expander" Background="{TemplateBinding Foreground}" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>

                            <Rectangle Width="3" Height="7" x:Name="whiteRect" Margin="3,0" VerticalAlignment="Center" Fill="#FFFFFF" HorizontalAlignment="Center" Visibility="Collapsed">
                                <Rectangle.BitmapEffect>
                                    <OuterGlowBitmapEffect GlowColor="#FFFFFF" GlowSize="4" Opacity="0.75"/>
                                </Rectangle.BitmapEffect>
                            </Rectangle>

                            <Border SnapsToDevicePixels="true" Grid.Column="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="PART_Header" ContentSource="Header"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" Value="#1ef009"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                <Setter Property="FontSize" Value="11"/>
                                <Setter Property="FontWeight" Value="Normal"/>
                                <Setter Property="Foreground" Value="#1ef009"/>
                                <Setter Property="Visibility" TargetName="whiteRect" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="#7F000000"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                    <Condition Property="HasItems" Value="false"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource Storyboard2}" x:Name="Storyboard2_BeginStoryboard"/>
                                </MultiTrigger.ExitActions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                                </MultiTrigger.EnterActions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <GroupBox Header="Select Group And Module" Height="61" HorizontalAlignment="Left" Margin="39,40,0,0" Name="groupBox3" VerticalAlignment="Top" Width="508">
            <Grid>
                <Label Content="Module" Height="28" HorizontalAlignment="Left" Margin="259,3,0,0" Name="label12" VerticalAlignment="Top" />
                <ComboBox Height="23" HorizontalAlignment="Left" Margin="316,6,0,0" Name="cmbModuleName" DisplayMemberPath="ModuleName" VerticalAlignment="Top" Width="157" SelectionChanged="cmbModuleName_SelectionChanged" Style="{StaticResource ComboBoxBGYellowGreen}" />
            </Grid>
        </GroupBox>
        <GroupBox Header="Permitted Menu" Height="285" HorizontalAlignment="Left" Margin="316,127,0,0" Name="groupBox2" VerticalAlignment="Top" Width="228">
            <Grid />
        </GroupBox>
        <GroupBox Header="Not Permitted Menu" Height="284" HorizontalAlignment="Left" Margin="39,126,0,0" Name="groupBox1" VerticalAlignment="Top" Width="224">
            <Grid />
        </GroupBox>
        <TreeView Height="255" HorizontalAlignment="Left" Margin="326,148,0,0" Name="treePermittedMenu" VerticalAlignment="Top" Width="206" SelectedItemChanged="treePermittedMenu_SelectedItemChanged">
            <!--<TreeView.Resources>
                <Style TargetType="TreeViewItem">
                    <Style.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="Control.Background" Value="LightBlue" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.Resources>-->
        </TreeView>
        <Button Background="#00000000" Content="&gt;" Height="23" HorizontalAlignment="Left" Margin="272,170,0,0" Name="btnMoveMenuItem" VerticalAlignment="Top" Width="31" Click="btnMoveMenuItem_Click" />
        <Button Background="#00000000" Content="&gt;&gt;" Height="23" HorizontalAlignment="Left" Margin="272,217,0,0" Name="btnMoveAllMenuItem" VerticalAlignment="Top" Width="31" Click="btnMoveAllMenuItem_Click" />
        <Button Background="#00000000" Content="&lt;" Height="23" HorizontalAlignment="Left" Margin="272,311,0,0" Name="btnDeleteMenuItem" VerticalAlignment="Top" Width="31" Click="btnDeleteMenuItem_Click" />
        <Button Background="#00000000" Content="&lt;&lt;" Height="23" HorizontalAlignment="Left" Margin="272,350,0,0" Name="btnDeleteAllMenuItem" VerticalAlignment="Top" Width="31" Click="btnDeleteAllMenuItem_Click" />
        <Label Content="User Group" Height="28" HorizontalAlignment="Left" Margin="57,59,0,0" Name="label10" VerticalAlignment="Top" />
        <ComboBox Height="23" HorizontalAlignment="Left" Margin="136,62,0,0" Name="cmbUserGroupMenuPerm" VerticalAlignment="Top" Width="156" SelectionChanged="cmbUserGroupMenuPerm_SelectionChanged" Style="{StaticResource ComboBoxBGYellowGreen}" />
        <Button Background="#00000000" Content="Save" Height="23" HorizontalAlignment="Left" Margin="308,428,0,0" Name="btnSaveMenuPermission" VerticalAlignment="Top" Width="75" Click="btnSaveMenuPermission_Click" />
        <Button Background="#00000000" Content="Delete" Height="23" HorizontalAlignment="Left" Margin="389,428,0,0" Name="btnDeleteMenuPermission" VerticalAlignment="Top" Width="75" Click="btnDeleteMenuPermission_Click" />
        <Button Background="#00000000" Content="Reset" Height="23" HorizontalAlignment="Left" Margin="470,428,0,0" Name="btnResetMenuPermission" VerticalAlignment="Top" Width="75" Click="btnResetMenuPermission_Click" />
        <TreeView Height="255" HorizontalAlignment="Left" Margin="48,146,0,0" Name="treeNotPermittedMenu" VerticalAlignment="Top" Width="206" SelectedItemChanged="treeNotPermittedMenu_SelectedItemChanged">
            <!--<TreeView.Resources>
                <Style TargetType="TreeViewItem">
                    <Style.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="Control.Background" Value="LightBlue" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.Resources>-->
        </TreeView>
        <Label Content="Menu Permission" FlowDirection="LeftToRight" FontSize="18" FontWeight="Bold" Height="33" Margin="223,0,199,0" Name="label2" VerticalAlignment="Top" />
    </Grid>
</Window>

